{"remainingRequest":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js??ref--14-0!/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/scoops.js","dependencies":[{"path":"/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/scoops.js","mtime":1643209973903},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/babel.config.js","mtime":1640544182000},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/cache-loader/dist/cjs.js","mtime":1643186739485},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js","mtime":1643186739453},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js","mtime":1643186739974},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js","mtime":1643186739542}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbW5sMzMvY29kZS92dWUtZm9ydW0vRm9ydW0tTVZQL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL21ubDMzL2NvZGUvdnVlLWZvcnVtL0ZvcnVtLU1WUC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGZpcmViYXNlIGZyb20gJ0AvaGVscGVycy9maXJlYmFzZSc7CmltcG9ydCB7IGZpbmRCeUlkLCBkb2NUb1Jlc291cmNlIH0gZnJvbSAnQC9oZWxwZXJzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIGl0ZW1zOiBbXQogIH0sCiAgZ2V0dGVyczogey8vIHNjb29wOiBzdGF0ZSA9PiB7CiAgICAvLyAgIHJldHVybiAoaWQpID0+IHsKICAgIC8vICAgICBjb25zdCBzY29vcCA9IGZpbmRCeUlkKHN0YXRlLml0ZW1zLCBpZCkKICAgIC8vICAgICByZXR1cm4gewogICAgLy8gICAgICAgLi4uc2Nvb3AsCiAgICAvLyAgICAgICBnZXQgYXV0aG9yICgpIHsKICAgIC8vICAgICAgICAgcmV0dXJuIGZpbmRCeUlkKHN0YXRlLnVzZXJzLml0ZW1zLCBzY29vcC51c2VySWQpCiAgICAvLyAgICAgICB9CiAgICAvLyAgICAgfQogICAgLy8gICB9CiAgICAvLyB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaFNjb29wczogZnVuY3Rpb24gZmV0Y2hTY29vcHMoX3JlZiwgX3JlZjIpIHsKICAgICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgdmFyIGlkcyA9IF9yZWYyLmlkczsKICAgICAgcmV0dXJuIGRpc3BhdGNoKCdmZXRjaEl0ZW1zJywgewogICAgICAgIHJlc291cmNlOiAnc2Nvb3BzJywKICAgICAgICBpZHM6IGlkcwogICAgICB9LCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgIH0sCiAgICBmZXRjaFNjb29wOiBmdW5jdGlvbiBmZXRjaFNjb29wKF9yZWYzLCBfcmVmNCkgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICAgICAgdmFyIGlkID0gX3JlZjQuaWQ7CiAgICAgIHJldHVybiBkaXNwYXRjaCgnZmV0Y2hJdGVtJywgewogICAgICAgIHJlc291cmNlOiAnc2Nvb3BzJywKICAgICAgICBpZDogaWQKICAgICAgfSwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlU2Nvb3A6IGZ1bmN0aW9uIGNyZWF0ZVNjb29wKF9yZWY1LCBfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByb290U3RhdGUsIGRpc2N1c3Npb25JZCwgdGV4dCwgc2Nvb3AsIHNjb29wRGlzY3Vzc2lvbiwgc2Nvb3BSZWYsIGRpc2NSZWYsIHVzZXJSZWYsIGZlZWRSZWYsIGJhdGNoLCB1c2VySWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0LCBzdGF0ZSA9IF9yZWY1LnN0YXRlLCByb290U3RhdGUgPSBfcmVmNS5yb290U3RhdGU7CiAgICAgICAgICAgICAgICBkaXNjdXNzaW9uSWQgPSBfcmVmNi5kaXNjdXNzaW9uSWQsIHRleHQgPSBfcmVmNi50ZXh0OwogICAgICAgICAgICAgICAgc2Nvb3AgPSB7CiAgICAgICAgICAgICAgICAgIGRpc2N1c3Npb25JZDogZGlzY3Vzc2lvbklkLAogICAgICAgICAgICAgICAgICB0ZXh0OiB0ZXh0LAogICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksCiAgICAgICAgICAgICAgICAgIHVzZXJJZDogcm9vdFN0YXRlLmF1dGguYXV0aElkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoZSBuZXcgc2Nvb3A6ICcsIHNjb29wKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGUgc3RhdGUgd2hlbiBjcmVhdGluZyBzY29vcDogJywgc3RhdGUpOwogICAgICAgICAgICAgICAgc2Nvb3BEaXNjdXNzaW9uID0gZmluZEJ5SWQocm9vdFN0YXRlLmRpc2N1c3Npb25zLml0ZW1zLCBkaXNjdXNzaW9uSWQpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoZSBzY29vcHMgZGlzY3Vzc2lvbjogJywgc2Nvb3BEaXNjdXNzaW9uKTsKICAgICAgICAgICAgICAgIHNjb29wUmVmID0gZmlyZWJhc2UuZmlyZXN0b3JlKCkuY29sbGVjdGlvbignc2Nvb3BzJykuZG9jKCk7CiAgICAgICAgICAgICAgICBkaXNjUmVmID0gZmlyZWJhc2UuZmlyZXN0b3JlKCkuY29sbGVjdGlvbignZGlzY3Vzc2lvbnMnKS5kb2Moc2Nvb3BEaXNjdXNzaW9uLmlkKTsKICAgICAgICAgICAgICAgIHVzZXJSZWYgPSBmaXJlYmFzZS5maXJlc3RvcmUoKS5jb2xsZWN0aW9uKCd1c2VycycpLmRvYyhyb290U3RhdGUuYXV0aC5hdXRoSWQpOwogICAgICAgICAgICAgICAgZmVlZFJlZiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oJ2ZlZWRzJykuZG9jKCk7CiAgICAgICAgICAgICAgICBiYXRjaCA9IGZpcmViYXNlLmZpcmVzdG9yZSgpLmJhdGNoKCk7IC8vIGFkZCBuZXcgc2Nvb3AKCiAgICAgICAgICAgICAgICBiYXRjaC5zZXQoc2Nvb3BSZWYsIHNjb29wKTsgLy8gYWRkIHNjb29wIHRvIHVzZXJzJyBjb2xsZWN0aW9uCgogICAgICAgICAgICAgICAgYmF0Y2gudXBkYXRlKHVzZXJSZWYsIHsKICAgICAgICAgICAgICAgICAgc2Nvb3BzQ291bnQ6IGZpcmViYXNlLmZpcmVzdG9yZS5GaWVsZFZhbHVlLmluY3JlbWVudCgxKQogICAgICAgICAgICAgICAgfSk7IC8vIGFwcGVuZCBzY29vcCB0byBpdHMgZGlzY3Vzc2lvbgoKICAgICAgICAgICAgICAgIGJhdGNoLnVwZGF0ZShkaXNjUmVmLCB7CiAgICAgICAgICAgICAgICAgIHNjb29wczogZmlyZWJhc2UuZmlyZXN0b3JlLkZpZWxkVmFsdWUuYXJyYXlVbmlvbihzY29vcFJlZi5pZCkKICAgICAgICAgICAgICAgIH0pOyAvLyBhcHBlbmQgbmV3IGZlZWQgdG8gZmlyZXN0b3JlIGZlZWRzJyBjb2xsZWN0aW9uCgogICAgICAgICAgICAgICAgYmF0Y2guc2V0KGZlZWRSZWYsIHsKICAgICAgICAgICAgICAgICAgZGlzY3Vzc2lvbjogewogICAgICAgICAgICAgICAgICAgIHdvcmQ6IHNjb29wRGlzY3Vzc2lvbi53b3JkLAogICAgICAgICAgICAgICAgICAgIGlkOiBzY29vcERpc2N1c3Npb24uaWQsCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBzY29vcERpc2N1c3Npb24udGltZXN0YW1wCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGxhdGVzdFNjb29wOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IHNjb29wUmVmLmlkLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IHNjb29wLnRleHQKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIHJldHVybiBiYXRjaC5jb21taXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgIHVzZXJJZCA9IHJvb3RTdGF0ZS5hdXRoLmF1dGhJZDsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXRlbScsIHsKICAgICAgICAgICAgICAgICAgcmVzb3VyY2U6ICdzY29vcHMnLAogICAgICAgICAgICAgICAgICBpdGVtOiBzY29vcFJlZgogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgndXNlcnMvYXBwZW5kU2Nvb3BUb1VzZXInLCB7CiAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLAogICAgICAgICAgICAgICAgICBzY29vcElkOiBzY29vcFJlZi5pZAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB1cGRhdGVTY29vcDogZnVuY3Rpb24gdXBkYXRlU2Nvb3AoX3JlZjcsIF9yZWY4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCBpZCwgdGV4dCwgc2Nvb3AsIG5ld1Njb29wLCBzY29vcFJlZiwgYmF0Y2g7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY3LmNvbW1pdCwgc3RhdGUgPSBfcmVmNy5zdGF0ZTsKICAgICAgICAgICAgICAgIGlkID0gX3JlZjguaWQsIHRleHQgPSBfcmVmOC50ZXh0OwogICAgICAgICAgICAgICAgc2Nvb3AgPSBmaW5kQnlJZChzdGF0ZS5pdGVtcywgaWQpOwogICAgICAgICAgICAgICAgbmV3U2Nvb3AgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHNjb29wKSwge30sIHsKICAgICAgICAgICAgICAgICAgdGV4dDogdGV4dAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBzY29vcFJlZiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oJ3Njb29wcycpLmRvYyhpZCk7CiAgICAgICAgICAgICAgICBiYXRjaCA9IGZpcmViYXNlLmZpcmVzdG9yZSgpLmJhdGNoKCk7CiAgICAgICAgICAgICAgICBiYXRjaC51cGRhdGUoc2Nvb3BSZWYsIG5ld1Njb29wKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBiYXRjaC5jb21taXQoKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJdGVtJywgewogICAgICAgICAgICAgICAgICByZXNvdXJjZTogJ3Njb29wcycsCiAgICAgICAgICAgICAgICAgIGl0ZW06IG5ld1Njb29wCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGRvY1RvUmVzb3VyY2UobmV3U2Nvb3ApKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7fQp9Ow=="},{"version":3,"sources":["/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/scoops.js"],"names":["firebase","findById","docToResource","namespaced","state","items","getters","actions","fetchScoops","dispatch","ids","resource","root","fetchScoop","id","createScoop","commit","rootState","discussionId","text","scoop","timestamp","Date","now","userId","auth","authId","console","log","scoopDiscussion","discussions","scoopRef","firestore","collection","doc","discRef","userRef","feedRef","batch","set","update","scoopsCount","FieldValue","increment","scoops","arrayUnion","discussion","word","latestScoop","item","scoopId","updateScoop","newScoop","mutations"],"mappings":"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","sourcesContent":["import firebase from '@/helpers/firebase'\nimport { findById, docToResource } from '@/helpers'\n\nexport default {\n    namespaced: true,\n    state: {\n        items: [],\n    },\n    getters: {\n    // scoop: state => {\n    //   return (id) => {\n    //     const scoop = findById(state.items, id)\n    //     return {\n    //       ...scoop,\n    //       get author () {\n    //         return findById(state.users.items, scoop.userId)\n    //       }\n    //     }\n    //   }\n    // }\n    },\n    actions: {\n        fetchScoops: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'scoops', ids }, { root: true }),\n        fetchScoop: ({ dispatch }, { id }) => dispatch('fetchItem', { resource: 'scoops', id }, { root: true }),\n        async createScoop ({ commit, state, rootState }, {discussionId, text}) {\n            let scoop = {\n                discussionId,\n                text,\n                timestamp: Date.now(),\n                userId: rootState.auth.authId\n            }\n            console.log('the new scoop: ', scoop)\n            console.log('the state when creating scoop: ', state)\n            let scoopDiscussion = findById(rootState.discussions.items, discussionId)\n            console.log('the scoops discussion: ', scoopDiscussion)\n    \n            const scoopRef = firebase.firestore().collection('scoops').doc()\n            const discRef = firebase.firestore().collection('discussions').doc(scoopDiscussion.id)\n            const userRef = firebase.firestore().collection('users').doc(rootState.auth.authId)\n            const feedRef = firebase.firestore().collection('feeds').doc()\n           \n            const batch = firebase.firestore().batch()\n            // add new scoop\n            batch.set(scoopRef, scoop )\n            // add scoop to users' collection\n            batch.update(userRef, {\n                scoopsCount: firebase.firestore.FieldValue.increment(1)\n            })\n            // append scoop to its discussion\n            batch.update(discRef, {\n                scoops:firebase.firestore.FieldValue.arrayUnion(scoopRef.id)\n            })\n            // append new feed to firestore feeds' collection\n            batch.set(feedRef, {\n                discussion : {\n                    word: scoopDiscussion.word,\n                    id: scoopDiscussion.id,\n                    timestamp: scoopDiscussion.timestamp\n                },\n                latestScoop: { \n                    id: scoopRef.id,\n                    text: scoop.text\n                },\n                timestamp: Date.now()\n            })\n            await batch.commit()\n    \n            const userId = rootState.auth.authId\n            commit('setItem', { resource: 'scoops', item: scoopRef }, { root: true } )\n            commit('users/appendScoopToUser', { userId, scoopId: scoopRef.id }, { root: true })\n        },\n        async updateScoop ({commit, state}, { id, text } ) {\n            const scoop = findById(state.items, id)\n            const newScoop = { ...scoop, text }\n            const scoopRef = firebase.firestore().collection('scoops').doc(id)\n            const batch = firebase.firestore().batch()\n            batch.update(scoopRef, newScoop)\n            await batch.commit()\n            commit('setItem', { resource: 'scoops', item: newScoop}, { root: true })\n            return docToResource(newScoop)\n        }\n    },\n    mutations: {}\n}"]}]}