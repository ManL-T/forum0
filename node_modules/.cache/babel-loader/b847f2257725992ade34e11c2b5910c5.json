{"remainingRequest":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js??ref--14-0!/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/users.js","dependencies":[{"path":"/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/users.js","mtime":1643209605936},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/babel.config.js","mtime":1640544182000},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/cache-loader/dist/cjs.js","mtime":1643186739485},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js","mtime":1643186739974},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js","mtime":1643186739542}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL21ubDMzL2NvZGUvdnVlLWZvcnVtL0ZvcnVtLU1WUC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL21ubDMzL2NvZGUvdnVlLWZvcnVtL0ZvcnVtLU1WUC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnQC9oZWxwZXJzL2ZpcmViYXNlJzsKaW1wb3J0IHsgZmluZEJ5SWQsIGRvY1RvUmVzb3VyY2UgfSBmcm9tICdAL2hlbHBlcnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIGl0ZW1zOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSwgZ2V0dGVycywgcm9vdFN0YXRlKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgICBjb25zb2xlLmxvZygnZ2V0dGVycyBpbiB1c2VyOiAnLCBnZXR0ZXJzKTsKICAgICAgICBjb25zb2xlLmxvZygnb24gdXNlciBnZXR0ZXIgdGhpcyBpcyB0aGUgaWQgdG8gZ2V0IHRoZSB1c2VyOiAnLCBpZCk7CiAgICAgICAgY29uc29sZS5sb2coJ29uIHVzZXIgZ2V0dGVyIHRoaXMgaXMgdGhlIHJlc291cmNlcyB0byBnZXQgdGhlIHVzZXI6ICcsIHN0YXRlLml0ZW1zKTsKICAgICAgICB2YXIgdXNlciA9IGZpbmRCeUlkKHN0YXRlLml0ZW1zLCBpZCk7CiAgICAgICAgaWYgKCF1c2VyKSByZXR1cm4gbnVsbDsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB1c2VyKSwge30sIHsKICAgICAgICAgIC8vIGF1dGhVc2VyIGRpc2N1c3Npb25zICYgc2Nvb3BzCiAgICAgICAgICBnZXQgZGlzY3Vzc2lvbnMoKSB7CiAgICAgICAgICAgIHJldHVybiByb290U3RhdGUuZGlzY3Vzc2lvbnMuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChkaXNjdXNzaW9uKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGRpc2N1c3Npb24udXNlcklkID09PSB1c2VyLmlkOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sCgogICAgICAgICAgZ2V0IHNjb29wcygpIHsKICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS5zY29vcHMuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChzY29vcCkgewogICAgICAgICAgICAgIHJldHVybiBzY29vcC51c2VySWQgPT09IHVzZXIuaWQ7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICB9KTsKICAgICAgfTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGZldGNoVXNlcnM6IGZ1bmN0aW9uIGZldGNoVXNlcnMoX3JlZiwgX3JlZjIpIHsKICAgICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgdmFyIGlkcyA9IF9yZWYyLmlkczsKICAgICAgcmV0dXJuIGRpc3BhdGNoKCdmZXRjaEl0ZW1zJywgewogICAgICAgIHJlc291cmNlOiAndXNlcnMnLAogICAgICAgIGlkczogaWRzCiAgICAgIH0sIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIGZldGNoVXNlcjogZnVuY3Rpb24gZmV0Y2hVc2VyKF9yZWYzLCBfcmVmNCkgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICAgICAgdmFyIGlkID0gX3JlZjQuaWQ7CiAgICAgIHJldHVybiBkaXNwYXRjaCgnZmV0Y2hJdGVtJywgewogICAgICAgIHJlc291cmNlOiAndXNlcnMnLAogICAgICAgIGlkOiBpZAogICAgICB9LCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgIH0sCiAgICBjcmVhdGVVc2VyOiBmdW5jdGlvbiBjcmVhdGVVc2VyKF9yZWY1LCBfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIGlkLCBuYW1lLCB1c2VybmFtZSwgZW1haWwsIHVzZXJuYW1lTG93ZXIsIHVzZXIsIHVzZXJSZWYsIG5ld1VzZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICAgICAgICAgICAgaWQgPSBfcmVmNi5pZCwgbmFtZSA9IF9yZWY2Lm5hbWUsIHVzZXJuYW1lID0gX3JlZjYudXNlcm5hbWUsIGVtYWlsID0gX3JlZjYuZW1haWw7CiAgICAgICAgICAgICAgICB1c2VybmFtZUxvd2VyID0gdXNlcm5hbWUudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgIGVtYWlsID0gZW1haWwudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgIHVzZXIgPSB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICAgICAgICAgICAgdXNlcm5hbWVMb3dlcjogdXNlcm5hbWVMb3dlciwKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgdXNlclJlZiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oJ3VzZXJzJykuZG9jKGlkKTsKICAgICAgICAgICAgICAgIHVzZXJSZWYuc2V0KHVzZXIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclJlZi5nZXQoKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgbmV3VXNlciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldEl0ZW0nLCB7CiAgICAgICAgICAgICAgICAgIHJlc291cmNlOiAndXNlcnMnLAogICAgICAgICAgICAgICAgICBpdGVtOiBuZXdVc2VyCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZG9jVG9SZXNvdXJjZShuZXdVc2VyKSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlVXNlcjogZnVuY3Rpb24gdXBkYXRlVXNlcihfcmVmNywgdXNlcikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCB1cGRhdGVzLCB1c2VyUmVmOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgICAgICB1cGRhdGVzID0gewogICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSB8fCBudWxsLAogICAgICAgICAgICAgICAgICBiaW86IHVzZXIuYmlvIHx8IG51bGwsCiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB1c2VyLmxvY2F0aW9uIHx8IG51bGwKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB1c2VyUmVmID0gZmlyZWJhc2UuZmlyZXN0b3JlKCkuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModXNlci5pZCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclJlZi51cGRhdGUodXBkYXRlcyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXRlbScsIHsKICAgICAgICAgICAgICAgICAgcmVzb3VyY2U6ICd1c2VycycsCiAgICAgICAgICAgICAgICAgIGl0ZW06IHVzZXIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBhcHBlbmREaXNjdXNzaW9uVG9Vc2VyOiBmdW5jdGlvbiBhcHBlbmREaXNjdXNzaW9uVG9Vc2VyKHN0YXRlLCBfcmVmOCkgewogICAgICB2YXIgdXNlcklkID0gX3JlZjgudXNlcklkLAogICAgICAgICAgZGlzY3Vzc2lvbklkID0gX3JlZjguZGlzY3Vzc2lvbklkOwogICAgICB2YXIgdXNlciA9IGZpbmRCeUlkKHN0YXRlLml0ZW1zLCB1c2VySWQpOwogICAgICB1c2VyLmRpc2N1c3Npb25zID0gdXNlci5kaXNjdXNzaW9ucyB8fCBbXTsgLy8gY3JlYXRlIHRoZSBhcnJheSBpZiBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0CgogICAgICB1c2VyLmRpc2N1c3Npb25zLnB1c2goZGlzY3Vzc2lvbklkKTsKICAgICAgY29uc29sZS5sb2coJ2Rpc2N1c3Npb25JZCBnZXRzIGFwcGVuZGVkIGludG8gdGhpcyB1c2VyOiAnLCB1c2VyKTsKICAgIH0sCiAgICBhcHBlbmRTY29vcFRvVXNlcjogZnVuY3Rpb24gYXBwZW5kU2Nvb3BUb1VzZXIoc3RhdGUsIF9yZWY5KSB7CiAgICAgIHZhciB1c2VySWQgPSBfcmVmOS51c2VySWQsCiAgICAgICAgICBzY29vcElkID0gX3JlZjkuc2Nvb3BJZDsKICAgICAgdmFyIHVzZXIgPSBmaW5kQnlJZChzdGF0ZS5pdGVtcywgdXNlcklkKTsKICAgICAgdXNlci5zY29vcHMgPSB1c2VyLnNjb29wcyB8fCBbXTsgLy8gaWYgYXJyYXkgbm90IGV4aXN0cywgY3JlYXRlIGl0CgogICAgICB1c2VyLnNjb29wcy5wdXNoKHNjb29wSWQpOwogICAgICBjb25zb2xlLmxvZygnc2Nvb3BJZCBnZXRzIGFwcGVuZGVkIGludG8gdGhpcyB1c2VyOiAnLCB1c2VyKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/users.js"],"names":["firebase","findById","docToResource","state","items","getters","user","rootState","id","console","log","discussions","filter","discussion","userId","scoops","scoop","actions","fetchUsers","dispatch","ids","resource","root","fetchUser","createUser","commit","name","username","email","usernameLower","toLowerCase","userRef","firestore","collection","doc","set","get","newUser","item","updateUser","updates","bio","location","update","mutations","appendDiscussionToUser","discussionId","push","appendScoopToUser","scoopId"],"mappings":"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","sourcesContent":["import firebase from '@/helpers/firebase'\nimport { findById, docToResource } from '@/helpers'\n\nexport default {\n    state: {\n        items: [],\n    },\n    getters: {\n        user: (state, getters, rootState) => {\n            return (id) => {\n                console.log('getters in user: ', getters)\n                console.log('on user getter this is the id to get the user: ', id)\n                console.log('on user getter this is the resources to get the user: ', state.items)\n                const user = findById(state.items, id)\n                if (!user) return null\n                return {\n                    ...user,\n                    // authUser discussions & scoops\n                    get discussions () {\n                        return rootState.discussions.items.filter(discussion => discussion.userId === user.id)\n                    },\n                    get scoops () {\n                        return rootState.scoops.items.filter(scoop => scoop.userId === user.id)\n                    }\n                }\n            }\n        },\n    },\n    actions: {\n        fetchUsers: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'users', ids }, { root: true }),\n        fetchUser: ({ dispatch }, { id }) => dispatch('fetchItem', { resource: 'users', id }, { root: true }),\n        async createUser ({commit}, {id, name, username, email}) {\n            const usernameLower = username.toLowerCase()\n            email = email.toLowerCase()\n            const user = { name, username, usernameLower, email }\n            const userRef = firebase.firestore().collection('users').doc(id)\n            userRef.set(user)\n            const newUser = await userRef.get()\n            commit('setItem', { resource: 'users', item: newUser}, { root: true })\n            return docToResource(newUser)\n        },\n        async updateUser ({commit}, user) {\n            const updates = {\n                username: user.username || null,\n                bio: user.bio || null,\n                location: user.location || null\n            }\n            const userRef = firebase.firestore().collection('users').doc(user.id)\n            await userRef.update(updates)\n            commit('setItem', { resource: 'users', item: user }, { root: true })\n        },\n    },\n    mutations: {\n        appendDiscussionToUser (state, { userId, discussionId }) {\n            const user = findById(state.items, userId)\n            user.discussions = user.discussions || []  // create the array if does not already exist\n            user.discussions.push(discussionId)\n            console.log('discussionId gets appended into this user: ', user )\n        },\n        appendScoopToUser ( state, { userId, scoopId }) {\n            const user = findById(state.items, userId)\n            user.scoops = user.scoops || [] // if array not exists, create it\n            user.scoops.push(scoopId)\n            console.log('scoopId gets appended into this user: ', user )\n        },\n    }\n}"]}]}