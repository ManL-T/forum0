{"remainingRequest":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js??ref--14-0!/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/feeds.js","dependencies":[{"path":"/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/feeds.js","mtime":1643200239468},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/babel.config.js","mtime":1640544182000},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/cache-loader/dist/cjs.js","mtime":1643186739485},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js","mtime":1643186739453},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js","mtime":1643186739974},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js","mtime":1643186739542}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbW5sMzMvY29kZS92dWUtZm9ydW0vRm9ydW0tTVZQL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCBmaXJlYmFzZSBmcm9tICdAL2hlbHBlcnMvZmlyZWJhc2UnOyAvLyBpbXBvcnQgeyBmaW5kQnlJZCwgZG9jVG9SZXNvdXJjZSB9IGZyb20gJ0AvaGVscGVycycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBpdGVtczogW10KICB9LAogIGdldHRlcnM6IHt9LAogIGFjdGlvbnM6IHsKICAgIGZldGNoRmVlZHM6IGZ1bmN0aW9uIGZldGNoRmVlZHMoX3JlZikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIC8vIEkgY291bGQgYmUgdXNpbmcgc2FtZSBwYXR0ZXJuIGFzIHJlc3QgZmV0Y2hzIGJ1dCBJIGhhdmUgbm8gaWRzIHRvIHBhc3MgYXMgc2V0CiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gZmlyZWJhc2UuZmlyZXN0b3JlKCkuY29sbGVjdGlvbignZmVlZHMnKS5vblNuYXBzaG90KGZ1bmN0aW9uIChxdWVyeVNuYXBzaG90KSB7CiAgICAgICAgICB2YXIgZmVlZHMgPSBxdWVyeVNuYXBzaG90LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgdmFyIGl0ZW0gPSBfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICAgIH0sIGRvYy5kYXRhKCkpOwoKICAgICAgICAgICAgY29tbWl0KCdzZXRJdGVtJywgewogICAgICAgICAgICAgIHJlc291cmNlOiAnZmVlZHMnLAogICAgICAgICAgICAgIGl0ZW06IGl0ZW0KICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBpdGVtOwogICAgICAgICAgfSk7CiAgICAgICAgICByZXNvbHZlKGZlZWRzKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCdBY3Rpb24gPj4gZmV0Y2hGZWVkczogJywgZmVlZHMpOwogICAgICAgIH0pOwogICAgICAgIGNvbW1pdCgnYXBwZW5kVW5zdWJzY3JpYmUnLCB7CiAgICAgICAgICB1bnN1YnNjcmliZTogdW5zdWJzY3JpYmUKICAgICAgICB9LCB7CiAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7Ly8gd2UgZG9uJ3QgbmVlZCB0aGVzZSBhbnltb3JlIHNpbmNlIHdlIGZldGNoIGRhdGEgd2hlbiB3ZSBuYXZpZ2F0ZSwgaGVuY2UgZGVsZXRlPz8/PwogICAgLy8gYXBwZW5kRGlzY3Vzc2lvblRvRmVlZHMgKHN0YXRlLCBuZXdGZWVkICkgewogICAgLy8gICAgIHN0YXRlLml0ZW1zLnB1c2gobmV3RmVlZCkKICAgIC8vICAgICBjb25zb2xlLmxvZygndGhpcyBuZXcgZGlzY3Vzc2lvbiBnZXRzIGFwcGVuZGVkIGludG8gZmVlZHM6ICcsIG5ld0ZlZWQpCiAgICAvLyB9LAogICAgLy8gYXBwZW5kU2Nvb3BUb0ZlZWRzIChzdGF0ZSwgeyBuZXdTY29vcCB9KSB7CiAgICAvLyAgICAgY29uc3Qgc2Nvb3BzRGlzY3Vzc2lvbiA9IGZpbmRCeUlkKHN0YXRlLmRpc2N1c3Npb25zLml0ZW1zLCBuZXdTY29vcC5kaXNjdXNzaW9uSWQpCiAgICAvLyAgICAgY29uc3QgbmV3RmVlZCA9IHsKICAgIC8vICAgICBkaXNjdXNzaW9uIDogewogICAgLy8gICAgICAgICB3b3JkOiBzY29vcHNEaXNjdXNzaW9uLndvcmQsCiAgICAvLyAgICAgICAgIHRpbWVzdGFtcCA6IHNjb29wc0Rpc2N1c3Npb24udGltZXN0YW1wLAogICAgLy8gICAgICAgICBpZDogc2Nvb3BzRGlzY3Vzc2lvbi5pZAogICAgLy8gICAgIH0sCiAgICAvLyAgICAgbGF0ZXN0U2Nvb3A6IG5ld1Njb29wLAogICAgLy8gICAgIGlkOiAnZmZkZCcgKyBNYXRoLnJhbmRvbSgpLAogICAgLy8gICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKQogICAgLy8gICAgIH0KICAgIC8vICAgICBzdGF0ZS5pdGVtcy5wdXNoKG5ld0ZlZWQpCiAgICAvLyAgICAgY29uc29sZS5sb2coJ3RoaXMgbmV3IHNjb29wIGdldHMgYXBwZW5kZWQgaW50byBmZWVkczogJyxuZXdGZWVkICkKICAgIC8vIH0sCiAgfQp9Ow=="},{"version":3,"sources":["/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/feeds.js"],"names":["firebase","namespaced","state","items","getters","actions","fetchFeeds","commit","Promise","resolve","unsubscribe","firestore","collection","onSnapshot","querySnapshot","feeds","docs","map","doc","item","id","data","resource","root","console","log","mutations"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB,C,CACA;;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GAFI;AAKXC,EAAAA,OAAO,EAAE,EALE;AAMXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAE;AAAA,UAAGC,MAAH,QAAGA,MAAH;AAAA,aAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACjD;AACA,YAAMC,WAAW,GAAGV,QAAQ,CAACW,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,UAAzC,CAAoD,UAACC,aAAD,EAAmB;AACvF,cAAMC,KAAK,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG,EAAI;AACxC,gBAAMC,IAAI;AAAKC,cAAAA,EAAE,EAAEF,GAAG,CAACE;AAAb,eAAoBF,GAAG,CAACG,IAAJ,EAApB,CAAV;;AACAd,YAAAA,MAAM,CAAC,SAAD,EAAY;AAAEe,cAAAA,QAAQ,EAAE,OAAZ;AAAqBH,cAAAA,IAAI,EAAJA;AAArB,aAAZ,EAAyC;AAAEI,cAAAA,IAAI,EAAE;AAAR,aAAzC,CAAN;AACA,mBAAOJ,IAAP;AACH,WAJa,CAAd;AAKAV,UAAAA,OAAO,CAACM,KAAD,CAAP;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCV,KAAtC;AACH,SARmB,CAApB;AASAR,QAAAA,MAAM,CAAC,mBAAD,EAAsB;AAACG,UAAAA,WAAW,EAAXA;AAAD,SAAtB,EAAqC;AAAEa,UAAAA,IAAI,EAAE;AAAR,SAArC,CAAN;AACH,OAZ2B,CAAhB;AAAA;AADP,GANE;AAqBXG,EAAAA,SAAS,EAAE,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBW;AArBA,CAAf","sourcesContent":["import firebase from '@/helpers/firebase'\n// import { findById, docToResource } from '@/helpers'\n\nexport default {\n    namespaced: true,\n    state: {\n        items: [],\n    },\n    getters: {},\n    actions: {\n        fetchFeeds: ({ commit }) => new Promise((resolve) => {\n            // I could be using same pattern as rest fetchs but I have no ids to pass as set\n            const unsubscribe = firebase.firestore().collection('feeds').onSnapshot((querySnapshot) => {\n                const feeds = querySnapshot.docs.map(doc => {\n                    const item = { id: doc.id, ...doc.data() }\n                    commit('setItem', { resource: 'feeds', item }, { root: true })\n                    return item\n                })\n                resolve(feeds)\n                console.log('Action >> fetchFeeds: ', feeds)\n            })   \n            commit('appendUnsubscribe', {unsubscribe}, { root: true })\n        }),\n    },\n    mutations: {\n    // we don't need these anymore since we fetch data when we navigate, hence delete????\n    // appendDiscussionToFeeds (state, newFeed ) {\n    //     state.items.push(newFeed)\n    //     console.log('this new discussion gets appended into feeds: ', newFeed)\n    // },\n    // appendScoopToFeeds (state, { newScoop }) {\n    //     const scoopsDiscussion = findById(state.discussions.items, newScoop.discussionId)\n    //     const newFeed = {\n    //     discussion : {\n    //         word: scoopsDiscussion.word,\n    //         timestamp : scoopsDiscussion.timestamp,\n    //         id: scoopsDiscussion.id\n    //     },\n    //     latestScoop: newScoop,\n    //     id: 'ffdd' + Math.random(),\n    //     timestamp: Date.now()\n    //     }\n    //     state.items.push(newFeed)\n    //     console.log('this new scoop gets appended into feeds: ',newFeed )\n    // },\n    }\n}"]}]}