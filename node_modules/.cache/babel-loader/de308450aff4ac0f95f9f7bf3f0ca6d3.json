{"remainingRequest":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js!/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js??ref--14-0!/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/auth.js","dependencies":[{"path":"/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/auth.js","mtime":1643200239520},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/babel.config.js","mtime":1640544182000},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/cache-loader/dist/cjs.js","mtime":1643186739485},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/thread-loader/dist/cjs.js","mtime":1643186739453},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/babel-loader/lib/index.js","mtime":1643186739974},{"path":"/home/mnl33/code/vue-forum/Forum-MVP/node_modules/eslint-loader/index.js","mtime":1643186739542}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mnl33/code/vue-forum/Forum-MVP/src/store/modules/auth.js"],"names":["firebase","namespaced","state","authId","authUserUnsubscribe","authObserverUnsubscribe","getters","authUser","rootState","rootGetters","console","log","actions","initAuthentication","dispatch","commit","Promise","resolve","unsubscribe","auth","onAuthStateChanged","user","fetchAuthUser","userId","currentUser","uid","resource","id","handleUnsubscribe","root","registerUserWithEmailAndPassword","email","name","username","password","createUserWithEmailAndPassword","result","signInWithEmailAndPassword","context","signOut","unsubscribeAuthUserSnapshot","authUnsubscribe","mutations","setAuthId","setAuthUserUnsubscribe","setAuthObserverUnsubscribe"],"mappings":"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","sourcesContent":["import firebase from '@/helpers/firebase'\n\nexport default {\n    namespaced: true,\n    state: {\n        authId: null,\n        authUserUnsubscribe: null,\n        authObserverUnsubscribe: null\n    },\n    getters: {\n        authUser: (state, rootState, getters, rootGetters) => {\n            console.log('rootState: ', rootState)\n            console.log('getters: ', getters)\n            return rootGetters['user'](state.authId)\n        }\n    },\n    actions: {\n        initAuthentication ({ dispatch, commit, state }) {\n            if (state.authObserverUnsubscribe) return\n            return new Promise((resolve) => {\n                const unsubscribe = firebase.auth().onAuthStateChanged( async (user) => {\n                    console.log('the user has changed. User: ', user)\n                    dispatch('unsubscribeAuthUserSnapshot')\n                    if(user) {\n                        await dispatch('fetchAuthUser')\n                        resolve(user)\n                    } else {\n                        resolve(null)\n                    }\n                })\n                commit('setAuthObserverUnsubscribe', unsubscribe)\n            })\n        },\n        fetchAuthUser: async ({ dispatch, state, commit }) => {\n            const userId = firebase.auth().currentUser?.uid\n            if(!userId) return\n            await dispatch('fetchItem', { \n                resource: 'users', \n                id: userId,\n                handleUnsubscribe: (unsubscribe) => {\n                    commit('setAuthUserUnsubscribe', unsubscribe)\n                }},\n                { root: true })\n            commit('setAuthId', userId)\n            console.log('using state to get authId: ', state.authId)\n        },\n        async registerUserWithEmailAndPassword ({dispatch}, { email, name, username, password }) {\n            const result = await firebase.auth().createUserWithEmailAndPassword(email, password)\n            await dispatch('users/createUser', { id: result.user.uid, email, name, username })\n            console.log('dispatching fetchAuthUser')\n            await dispatch('fetchAuthUser')\n        },\n        async signInWithEmailAndPassword (context, { email, password }) {\n            return firebase.auth().signInWithEmailAndPassword(email, password)\n        },\n        async signOut ({commit}) {\n            await firebase.auth().signOut()\n            commit('setAuthId', null)\n        },\n        async unsubscribeAuthUserSnapshot ({ state, commit }) {\n            if (state.authUnsubscribe) {\n                state.authUserUnsubscribe()\n                commit('setAuthUserUnsubscribe', null)\n            }\n        }\n    },\n    mutations: {\n        setAuthId (state, id) {\n            console.log('setting mutation authId to logged in user with id: ', id)\n            state.authId = id\n            console.log('authId: ',state.authId)\n        },\n        setAuthUserUnsubscribe (state, unsubscribe) {\n            state.authUserUnsubscribe = unsubscribe\n        },\n        setAuthObserverUnsubscribe (state, unsubscribe) {\n            state.authObserverUnsubscribe = unsubscribe\n        }\n    }\n}"]}]}